const uploadBox = document.getElementById('uploadBox');
const imageUpload = document.getElementById('imageUpload');

uploadBox.addEventListener('dragover', (e) => {
    e.preventDefault();
    uploadBox.classList.add('dragover');
});

uploadBox.addEventListener('dragleave', () => {
    uploadBox.classList.remove('dragover');
});

uploadBox.addEventListener('drop', (e) => {
    e.preventDefault();
    uploadBox.classList.remove('dragover');

    const file = e.dataTransfer.files[0];
    if (file) {
        handleImageUpload(file);
    }
});

uploadBox.addEventListener('click', () => {
    imageUpload.click();
});

imageUpload.addEventListener('change', (e) => {
    const file = e.target.files[0];
    if (file) {
        handleImageUpload(file);
    }
});

function handleImageUpload(file) {
    const img = new Image();
    const canvas = document.getElementById('imageCanvas');
    const ctx = canvas.getContext('2d');
    const matrixContainer = document.getElementById('matrix');

    img.onload = function() {
        if (img.width !== img.height) {
            alert("The image is not 1:1 ratio! Please upload a profile picture.");
            matrixContainer.innerHTML = '';
            return;
        }

        canvas.width = 30;
        canvas.height = 30;
        ctx.drawImage(img, 0, 0, 30, 30);

        const imageData = ctx.getImageData(0, 0, 30, 30);
        const data = imageData.data;

        matrixContainer.innerHTML = '';
        let formattedMatrix = [];

        for (let y = 0; y < 30; y++) {
            for (let x = 0; x < 30; x++) {
                const index = (y * 30 + x) * 4;
                const r = data[index];
                const g = data[index + 1];
                const b = data[index + 2];

                const rStr = r.toString().padStart(3, '0');
                const gStr = g.toString().padStart(3, '0');
                const bStr = b.toString().padStart(3, '0');
                formattedMatrix.push(`${rStr}${gStr}${bStr}`);

                const color = `rgb(${r}, ${g}, ${b})`;
                const pixelDiv = document.createElement('div');
                pixelDiv.className = 'pixel';
                pixelDiv.style.backgroundColor = color;
                matrixContainer.appendChild(pixelDiv);
            }
        }

        matrixContainer.style.animation = 'none';
        setTimeout(() => {
            matrixContainer.style.animation = 'spreadAndShrink 3s';
        }, 10);

        const formattedMatrixText = formattedMatrix.join(',');
        console.log("Matrix:");
        console.log(formattedMatrixText);
        setTimeout(() => {
            compareMatrix(formattedMatrixText);
        }, 3000);
    };

    const reader = new FileReader();
    reader.onload = function(event) {
        img.src = event.target.result;
    };
    reader.readAsDataURL(file);
}

function calculateColorDistance(color1, color2) {
    //Calculate similarity of uploaded pictured to bartosz using euclidean similarity
    const r1 = parseInt(color1.slice(0, 3), 10);
    const g1 = parseInt(color1.slice(3, 6), 10);
    const b1 = parseInt(color1.slice(6, 9), 10);

    const r2 = parseInt(color2.slice(0, 3), 10);
    const g2 = parseInt(color2.slice(3, 6), 10);
    const b2 = parseInt(color2.slice(6, 9), 10);

    return Math.sqrt(Math.pow(r1 - r2, 2) + Math.pow(g1 - g2, 2) + Math.pow(b1 - b2, 2));
}

function compareMatrix(matrix) {
    const comparisonMatrix = ``; // Replace with your actual comparison matrix
    const matrixArray = matrix.split(',');
    const comparisonArray = comparisonMatrix.split(',');
    const totalPixels = matrixArray.length;
    let totalDistance = 0;
    const threshold = 50;
    matrixArray.forEach((value, index) => {
        const color1 = value;
        const color2 = comparisonArray[index];
        const distance = calculateColorDistance(color1, color2);
        totalDistance += distance;
    });

    const averageDistance = totalDistance / totalPixels;
    
    const maxDistance = Math.sqrt(Math.pow(255, 2) * 3);
    const similarityPercentage = (1 - (averageDistance / maxDistance)) * 100;

    console.log(`Average Color Distance: ${averageDistance.toFixed(2)}`);
    console.log(`Similarity: ${similarityPercentage.toFixed(2)}%`);

    if (similarityPercentage > 85) {
        alert(`Bartosz!!🙀\nSimilarity: ${similarityPercentage.toFixed(2)}%`);
    } else {
        const audio = new Audio('sus.mp3');
        audio.play();
        
        audio.onended = () => {
            const popup = document.createElement('div');
            popup.style.position = 'fixed';
            popup.style.top = '50%';
            popup.style.left = '50%';
            popup.style.transform = 'translate(-50%, -50%)';
            popup.style.zIndex = '1000';
            popup.style.backgroundColor = 'white';
            popup.style.border = '2px solid black';
            popup.style.padding = '20px';
            popup.style.boxShadow = '0px 0px 10px rgba(0, 0, 0, 0.5)';
            popup.style.textAlign = 'center';
            const image = new Image();
            image.src = 'impostor.png';
            image.style.maxWidth = '100%';
            image.style.maxHeight = '100%';
            popup.appendChild(image);
            document.body.appendChild(popup);
            alert(`Not Bartosz❗\nSimilarity: ${similarityPercentage.toFixed(2)}%`);
            document.body.removeChild(popup);
        };
    }
}


